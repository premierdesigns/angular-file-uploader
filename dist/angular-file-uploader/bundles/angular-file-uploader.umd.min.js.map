{"version":3,"sources":["ng://angular-file-uploader/lib/angular-file-uploader.service.ts","null","ng://angular-file-uploader/lib/angular-file-uploader.component.ts","ng://angular-file-uploader/lib/angular-file-uploader.module.ts"],"names":["AngularFileUploaderService","Injectable","args","providedIn","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","AngularFileUploaderComponent","config","resetUpload","ApiResponse","EventEmitter","idDate","Date","reg","selectedFiles","notAllowedList","Caption","singleFile","progressBarShow","uploadBtn","uploadMsg","afterUpload","uploadClick","ngOnChanges","rst","theme","id","parseInt","toString","split","Math","floor","random","hideProgressBar","hideResetBtn","hideSelectBtn","maxSize","uploadAPI","formatsAllowed","multiple","headers","responseType","defaultReplaceTextsValues","selectFileBtn","resetBtn","dragNDropBox","attachPinBtn","afterUploadMsg_success","afterUploadMsg_error","replaceTexts","currentValue","resetFileUpload","ngOnInit","onChange","event","formatsCount","file","currentFileExt","ext","frmtAllowed","match","RegExp","type","dataTransfer","files","target","srcElement","exec","name","j","toLowerCase","size","push","fileName","fileSize","convertSize","errorMsg","uploadFiles","percentComplete","value","_this","isError","xhr","XMLHttpRequest","formData","FormData","undefined","append","onreadystatechange","evnt","readyState","status","uploadMsgText","uploadMsgClass","emit","upload","onprogress","lengthComputable","round","loaded","total","onload","onerror","open","_a","__values","o","m","Symbol","iterator","next","done","tslib_1.__values","keys","_b","key","setRequestHeader","send","removeFile","sf_na","splice","toFixed","attachpinOnclick","document","getElementById","click","drop","stopPropagation","preventDefault","allowDrop","dropEffect","Component","selector","template","styles","Input","Output","AngularFileUploaderModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AngularFileUploaderService {\r\n\r\n  constructor() { }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, OnChanges, SimpleChanges, Inject, ViewEncapsulation } from '@angular/core';\r\n@Component({\r\n  selector: 'angular-file-uploader',\r\n  template: `<div class=\"container\" *ngIf=\"(theme !== 'attachPin')\" id=\"default\">\r\n\r\n    <!-- Drag n Drop theme Starts -->\r\n    <div *ngIf=\"theme == 'dragNDrop'\" id=\"dragNDrop\" [ngClass]=\"(hideSelectBtn && hideResetBtn) ? null : 'dragNDropBtmPad'\" class=\"dragNDrop\">\r\n        <div style=\"position:relative;\">\r\n            <div id=\"div1\" class=\"div1 afu-dragndrop-box\" (drop)=\"drop($event)\" (dragover)=\"allowDrop($event)\">\r\n                <p class=\"afu-dragndrop-text\">{{replaceTexts?.dragNDropBox}}</p>\r\n            </div>\r\n            <!-- <span class='label label-info' id=\"upload-file-info{{id}}\">{{selectedFiles[0]?.name}}</span> -->\r\n        </div>\r\n    </div>\r\n    <!-- Drag n Drop theme Ends -->\r\n\r\n    <label for=\"sel{{id}}\" class=\"btn btn-primary btn-sm afu-select-btn\" *ngIf=\"!hideSelectBtn\">{{replaceTexts?.selectFileBtn}}</label>\r\n    <input type=\"file\" id=\"sel{{id}}\" style=\"display: none\" *ngIf=\"!hideSelectBtn\" (change)=\"onChange($event)\" title=\"Select file\"\r\n        name=\"files[]\" [accept]=formatsAllowed [attr.multiple]=\"multiple ? '' : null\" />\r\n    <button class=\"btn btn-info btn-sm resetBtn afu-reset-btn\" (click)=\"resetFileUpload()\" *ngIf=\"!hideResetBtn\">{{replaceTexts?.resetBtn}}</button>\r\n    <br *ngIf=\"!hideSelectBtn\">\r\n    <p class=\"constraints-info afu-constraints-info\">({{formatsAllowed}}) Size limit- {{(convertSize(maxSize *1024000))}}</p>\r\n    <!--Selected file list-->\r\n    <div class=\"row afu-valid-file\" *ngFor=\"let sf of selectedFiles;let i=index\" >\r\n        <p class=\"col-xs-3 textOverflow\"><span class=\"text-primary\">{{sf.name}}</span></p>\r\n        <p class=\"col-xs-3 padMarg sizeC\"><strong>({{convertSize(sf.size)}})</strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n        <!--  <input class=\"col-xs-3 progress caption\"  type=\"text\"  placeholder=\"Caption..\"  [(ngModel)]=\"Caption[i]\"  *ngIf=\"uploadClick\"/> -->\r\n        <div class=\"progress col-xs-3 padMarg afu-progress-bar\" *ngIf=\"singleFile && progressBarShow && !hideProgressBar\">\r\n            <span class=\"progress-bar progress-bar-success\" role=\"progressbar\" [ngStyle]=\"{'width':percentComplete+'%'}\">{{percentComplete}}%</span>\r\n        </div>\r\n        <a class=\"col-xs-1\" role=\"button\" (click)=\"removeFile(i,'sf')\" *ngIf=\"uploadClick\"><i class=\"fa fa-times\"></i></a>\r\n    </div>\r\n    <!--Invalid file list-->\r\n    <div class=\"row text-danger afu-invalid-file\" *ngFor=\"let na of notAllowedList;let j=index\">\r\n        <p class=\"col-xs-3 textOverflow\"><span>{{na['fileName']}}</span></p>\r\n        <p class=\"col-xs-3 padMarg sizeC\"><strong>({{na['fileSize']}})</strong></p>\r\n        <p class=\"col-xs-3 \">{{na['errorMsg']}}</p>\r\n        <a class=\"col-xs-1 delFileIcon\" role=\"button\" (click)=\"removeFile(j,'na')\" *ngIf=\"uploadClick\">&nbsp;<i class=\"fa fa-times\"></i></a>\r\n    </div>\r\n\r\n    <p *ngIf=\"uploadMsg\" class=\"{{uploadMsgClass}} + afu-upload-status\">{{uploadMsgText}}<p>\r\n    <div *ngIf=\"!singleFile && progressBarShow && !hideProgressBar\">\r\n        <div class=\"progress col-xs-4 padMarg afu-progress-bar\">\r\n            <span class=\"progress-bar progress-bar-success\" role=\"progressbar\" [ngStyle]=\"{'width':percentComplete+'%'}\">{{percentComplete}}%</span>\r\n        </div>\r\n        <br>\r\n        <br>\r\n    </div>\r\n    <button class=\"btn btn-success afu-upload-btn\" type=\"button\" (click)=\"uploadFiles()\" [disabled]=!uploadBtn>{{replaceTexts?.uploadBtn}}</button>\r\n    <br>\r\n</div>\r\n\r\n<!--/////////////////////////// ATTACH PIN THEME  //////////////////////////////////////////////////////////-->\r\n<div *ngIf=\"theme == 'attachPin'\" id=\"attachPin\">\r\n    <div style=\"position:relative;padding-left:6px\">\r\n        <a class='btn up_btn afu-attach-pin' (click)=\"attachpinOnclick()\">\r\n          {{replaceTexts?.attachPinBtn}}\r\n            <i class=\"fa fa-paperclip\" aria-hidden=\"true\"></i>\r\n            <!-- <p style=\"margin-top:10px\">({{formatsAllowed}}) Size limit- {{(convertSize(maxSize * 1024000))}}</p> -->\r\n            <input type=\"file\" id=\"sel{{id}}\" (change)=\"onChange($event)\" style=\"display: none\" title=\"Select file\" name=\"files[]\" [accept]=formatsAllowed\r\n                [attr.multiple]=\"multiple ? '' : null\" />\r\n            <br>\r\n        </a>\r\n        &nbsp;\r\n        <span class='label label-info' id=\"upload-file-info{{id}}\">{{selectedFiles[0]?.name}}</span>\r\n    </div>\r\n</div>\r\n\r\n<!--/////////////////////////// DRAG N DROP THEME  //////////////////////////////////////////////////////////-->\r\n<!-- <div *ngIf=\"theme == 'dragNDrop'\" id=\"dragNDrop\">\r\n  <div style=\"position:relative;padding-left:6px\">\r\n    <div id=\"div1\" (drop)=\"drop($event)\" (dragover)=\"allowDrop($event)\">\r\n      <p>Drag N Drop</p>\r\n    </div>\r\n    <span class='label label-info' id=\"upload-file-info{{id}}\">{{selectedFiles[0]?.name}}</span>\r\n  </div>\r\n</div> -->\r\n` ,\r\n  styles: [`.constraints-info{margin-top:10px;font-style:italic}.padMarg{padding:0;margin-bottom:0}.caption{margin-right:5px}.textOverflow{white-space:nowrap;padding-right:0;overflow:hidden;text-overflow:ellipsis}.up_btn{color:#000;background-color:transparent;border:2px solid #5c5b5b;border-radius:22px}.delFileIcon{text-decoration:none;color:#ce0909}.dragNDrop .div1{display:border-box;border:2px dashed #5c5b5b;height:6rem;width:20rem}.dragNDrop .div1>p{text-align:center;font-weight:700;color:#5c5b5b;margin-top:1.4em}.dragNDropBtmPad{padding-bottom:2rem}@media screen and (max-width:620px){.caption{padding:0}}@media screen and (max-width:510px){.sizeC{width:25%}}@media screen and (max-width:260px){.caption,.sizeC{font-size:10px}}.resetBtn{margin-left:3px}`]\r\n})\r\nexport class AngularFileUploaderComponent implements OnInit, OnChanges {\r\n  @Input()\r\n  config: any = {};\r\n  @Input()\r\n  resetUpload: boolean = this.config['resetUpload'];\r\n  @Output()\r\n  ApiResponse = new EventEmitter();\r\n\r\n  theme: string;\r\n  id: number;\r\n  hideProgressBar: boolean;\r\n  maxSize: number;\r\n  uploadAPI: string;\r\n  formatsAllowed: string;\r\n  multiple: boolean;\r\n  headers: any;\r\n  responseType: any;\r\n  hideResetBtn: boolean;\r\n  hideSelectBtn: boolean;\r\n\r\n  idDate: number = +new Date();\r\n  reg: RegExp = /(?:\\.([^.]+))?$/;\r\n  selectedFiles: Array<any> = [];\r\n  notAllowedList: Array<Object> = [];\r\n  Caption: Array<string> = [];\r\n  singleFile = true;\r\n  progressBarShow = false;\r\n  uploadBtn = false;\r\n  uploadMsg = false;\r\n  afterUpload = false;\r\n  uploadClick = true;\r\n  uploadMsgText: string;\r\n  uploadMsgClass: string;\r\n  percentComplete: number;\r\n  replaceTexts;\r\n\r\n  constructor() {\r\n    // console.log(\"id: \",this.id);\r\n    // console.log(\"idDate: \",this.idDate);\r\n    // console.log(Math.random());\r\n  }\r\n\r\n  ngOnChanges(rst: SimpleChanges) {\r\n    if (rst['config']) {\r\n      this.theme = this.config['theme'] || '';\r\n      this.id =\r\n        this.config['id'] ||\r\n        parseInt((this.idDate / 10000).toString().split('.')[1]) +\r\n          Math.floor(Math.random() * 20) * 10000;\r\n      this.hideProgressBar = this.config['hideProgressBar'] || false;\r\n      this.hideResetBtn = this.config['hideResetBtn'] || false;\r\n      this.hideSelectBtn = this.config['hideSelectBtn'] || false;\r\n      this.maxSize = this.config['maxSize'] || 20;\r\n      this.uploadAPI = this.config['uploadAPI']['url'];\r\n      this.formatsAllowed =\r\n        this.config['formatsAllowed'] || '.jpg,.png,.pdf,.docx,.txt,.gif,.jpeg';\r\n      this.multiple = this.config['multiple'] || false;\r\n      this.headers = this.config['uploadAPI']['headers'] || {};\r\n      this.responseType = this.config['uploadAPI']['responseType'] || {};\r\n      const defaultReplaceTextsValues: ReplaceTexts =  {\r\n        selectFileBtn: this.multiple ? 'Select Files' : 'Select File',\r\n        resetBtn: 'Reset',\r\n        uploadBtn: 'Upload',\r\n        dragNDropBox: 'Drag N Drop',\r\n        attachPinBtn: this.multiple ? 'Attach Files...' : 'Attach File...',\r\n        afterUploadMsg_success: 'Successfully Uploaded !',\r\n        afterUploadMsg_error: 'Upload Failed !'\r\n      };\r\n      this.replaceTexts = {...defaultReplaceTextsValues};\r\n      if (this.config['replaceTexts']) {\r\n        this.replaceTexts = {\r\n          ...defaultReplaceTextsValues,\r\n          ...this.config['replaceTexts']\r\n        };\r\n      }\r\n\r\n      // console.log(\"config: \", this.config);\r\n      // console.log(this.config[\"maxSize\"]);\r\n      // console.log(this.headers);\r\n      // console.log(\"rst: \", rst);\r\n    }\r\n\r\n    if (rst['resetUpload']) {\r\n      if (rst['resetUpload'].currentValue === true) {\r\n        this.resetFileUpload();\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log(\"Id: \", this.id);\r\n    this.resetUpload = false;\r\n  }\r\n\r\n  resetFileUpload() {\r\n    this.selectedFiles = [];\r\n    this.Caption = [];\r\n    this.notAllowedList = [];\r\n    this.uploadMsg = false;\r\n    this.uploadBtn = false;\r\n  }\r\n\r\n  onChange(event: any) {\r\n    // console.log(this.maxSize + this.formatsAllowed + this.multiple);\r\n    this.notAllowedList = [];\r\n    // console.log(\"onchange hit\");\r\n    if (this.afterUpload || !this.multiple) {\r\n      this.selectedFiles = [];\r\n      this.Caption = [];\r\n      this.afterUpload = false;\r\n    }\r\n    // FORMATS ALLOWED LIST\r\n    // console.log(\"FORMATS ALLOWED LIST= \"+this.formatsAllowed);\r\n    // NO OF FORMATS ALLOWED\r\n    let formatsCount: any;\r\n    formatsCount = this.formatsAllowed.match(new RegExp('\\\\.', 'g'));\r\n    formatsCount = formatsCount.length;\r\n    // console.log(\"NO OF FORMATS ALLOWED= \"+formatsCount);\r\n    // console.log(\"-------------------------------\");\r\n\r\n    // ITERATE SELECTED FILES\r\n    let file: FileList;\r\n    if (event.type === 'drop') {\r\n      file = event.dataTransfer.files;\r\n      // console.log(\"type: drop\");\r\n    } else {\r\n      file = event.target.files || event.srcElement.files;\r\n      // console.log(\"type: change\");\r\n    }\r\n    // console.log(file);\r\n    let currentFileExt: any;\r\n    let ext: any;\r\n    let frmtAllowed: boolean;\r\n    for (let i = 0; i < file.length; i++) {\r\n      // CHECK FORMAT\r\n      // CURRENT FILE EXTENSION\r\n      currentFileExt = this.reg.exec(file[i].name);\r\n      currentFileExt = currentFileExt[1];\r\n      // console.log(file[i].name);\r\n      frmtAllowed = false;\r\n      // FORMAT ALLOWED LIST ITERATE\r\n      for (let j = formatsCount; j > 0; j--) {\r\n        ext = this.formatsAllowed.split('.')[j];\r\n        // console.log(\"FORMAT LIST (\"+j+\")= \"+ext.split(\",\")[0]);\r\n        if (j === formatsCount) {\r\n          ext = this.formatsAllowed.split('.')[j] + ',';\r\n        } // check format\r\n        if (currentFileExt.toLowerCase() === ext.split(',')[0]) {\r\n          frmtAllowed = true;\r\n        }\r\n      }\r\n\r\n      if (frmtAllowed) {\r\n        // console.log(\"FORMAT ALLOWED\");\r\n        // CHECK SIZE\r\n        if (file[i].size > this.maxSize * 1024000) {\r\n          // console.log(\"SIZE NOT ALLOWED (\"+file[i].size+\")\");\r\n          this.notAllowedList.push({\r\n            fileName: file[i].name,\r\n            fileSize: this.convertSize(file[i].size),\r\n            errorMsg: 'Invalid size'\r\n          });\r\n          continue;\r\n        } else {\r\n          // format allowed and size allowed then add file to selectedFile array\r\n          this.selectedFiles.push(file[i]);\r\n        }\r\n      } else {\r\n        // console.log(\"FORMAT NOT ALLOWED\");\r\n        this.notAllowedList.push({\r\n          fileName: file[i].name,\r\n          fileSize: this.convertSize(file[i].size),\r\n          errorMsg: 'Invalid format'\r\n        });\r\n        continue;\r\n      }\r\n    }\r\n\r\n    if (this.selectedFiles.length !== 0) {\r\n      this.uploadBtn = true;\r\n      if (this.theme === 'attachPin') {\r\n        this.uploadFiles();\r\n      }\r\n    } else {\r\n      this.uploadBtn = false;\r\n    }\r\n    this.uploadMsg = false;\r\n    this.uploadClick = true;\r\n    this.percentComplete = 0;\r\n    event.target.value = null;\r\n  }\r\n\r\n  uploadFiles() {\r\n    // console.log(this.selectedFiles);\r\n    let i: any;\r\n    this.progressBarShow = true;\r\n    this.uploadClick = false;\r\n    this.notAllowedList = [];\r\n    let isError = false;\r\n\r\n    const xhr = new XMLHttpRequest();\r\n    const formData = new FormData();\r\n\r\n    for (i = 0; i < this.selectedFiles.length; i++) {\r\n      if (this.Caption[i] === undefined) {\r\n        this.Caption[i] = 'file' + i;\r\n      }\r\n      // Add DATA TO BE SENT\r\n      formData.append(\r\n        this.Caption[i],\r\n        this.selectedFiles[i] /*, this.selectedFiles[i].name*/\r\n      );\r\n      // console.log(this.selectedFiles[i]+\"{\"+this.Caption[i]+\" (Caption)}\");\r\n    }\r\n\r\n    if (i > 1) {\r\n      this.singleFile = false;\r\n    } else {\r\n      this.singleFile = true;\r\n    }\r\n\r\n    xhr.onreadystatechange = evnt => {\r\n      // console.log('onready');\r\n      if (xhr.readyState === 4) {\r\n        if (xhr.status !== 200 && xhr.status !== 201) {\r\n          isError = true;\r\n          this.progressBarShow = false;\r\n          this.uploadBtn = false;\r\n          this.uploadMsg = true;\r\n          this.afterUpload = true;\r\n          this.uploadMsgText = this.replaceTexts.afterUploadMsg_error;\r\n          this.uploadMsgClass = 'text-danger lead';\r\n          // console.log(this.uploadMsgText);\r\n          // console.log(evnt);\r\n        }\r\n        this.ApiResponse.emit(xhr);\r\n      }\r\n    };\r\n\r\n    xhr.upload.onprogress = evnt => {\r\n      this.uploadBtn = false; // button should be disabled by process uploading\r\n      if (evnt.lengthComputable) {\r\n        this.percentComplete = Math.round((evnt.loaded / evnt.total) * 100);\r\n      }\r\n      // console.log(\"Progress...\"/*+this.percentComplete+\" %\"*/);\r\n    };\r\n\r\n    xhr.onload = evnt => {\r\n      // console.log('onload');\r\n      // console.log(evnt);\r\n      this.progressBarShow = false;\r\n      this.uploadBtn = false;\r\n      this.uploadMsg = true;\r\n      this.afterUpload = true;\r\n      if (!isError) {\r\n        this.uploadMsgText = this.replaceTexts.afterUploadMsg_success;\r\n        this.uploadMsgClass = 'text-success lead';\r\n        // console.log(this.uploadMsgText + \" \" + this.selectedFiles.length + \" file\");\r\n      }\r\n    };\r\n\r\n    xhr.onerror = evnt => {\r\n      // console.log('onerror');\r\n      // console.log(evnt);\r\n    };\r\n\r\n    xhr.open('POST', this.uploadAPI, true);\r\n    for (const key of Object.keys(this.headers)) {\r\n      // Object.keys will give an Array of keys\r\n      xhr.setRequestHeader(key, this.headers[key]);\r\n    }\r\n    if (this.responseType) {\r\n      xhr.responseType = this.responseType;\r\n    }\r\n    // let token = sessionStorage.getItem(\"token\");\r\n    // xhr.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\r\n    // xhr.setRequestHeader('Authorization', `Bearer ${token}`);\r\n    xhr.send(formData);\r\n  }\r\n\r\n  removeFile(i: any, sf_na: any) {\r\n    // console.log(\"remove file clicked \" + i)\r\n    if (sf_na === 'sf') {\r\n      this.selectedFiles.splice(i, 1);\r\n      this.Caption.splice(i, 1);\r\n    } else {\r\n      this.notAllowedList.splice(i, 1);\r\n    }\r\n\r\n    if (this.selectedFiles.length === 0) {\r\n      this.uploadBtn = false;\r\n    }\r\n  }\r\n\r\n  convertSize(fileSize: number) {\r\n    // console.log(fileSize + \" - \"+ str);\r\n    return fileSize < 1024000\r\n      ? (fileSize / 1024).toFixed(2) + ' KB'\r\n      : (fileSize / 1024000).toFixed(2) + ' MB';\r\n  }\r\n\r\n  attachpinOnclick() {\r\n    // console.log(\"ID: \", this.id);\r\n    document.getElementById('sel' + this.id)!.click();\r\n    // $(\"#\"+\"sel\"+this.id).click();\r\n  }\r\n\r\n  drop(event: any) {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    // console.log(\"drop: \", event);\r\n    // console.log(\"drop: \", event.dataTransfer.files);\r\n    this.onChange(event);\r\n  }\r\n  allowDrop(event: any) {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    event.dataTransfer.dropEffect = 'copy';\r\n    // console.log(\"allowDrop: \",event)\r\n  }\r\n}\r\n\r\n/* interface CONFIG {\r\n  uploadAPI: string;\r\n  multiple?: boolean;\r\n  formatsAllowed?: string;\r\n  maxSize?: number;\r\n  id?: number;\r\n  resetUpload?: boolean;\r\n  theme?: string;\r\n  hideProgressBar?: boolean;\r\n }\r\n */\r\n\r\n interface ReplaceTexts {\r\n  selectFileBtn: string,\r\n  resetBtn: string,\r\n  uploadBtn: string,\r\n  dragNDropBox: string,\r\n  attachPinBtn: string,\r\n  afterUploadMsg_success: string,\r\n  afterUploadMsg_error: string,\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AngularFileUploaderComponent } from './angular-file-uploader.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [AngularFileUploaderComponent],\r\n  exports: [AngularFileUploaderComponent]\r\n})\r\nexport class AngularFileUploaderModule { }\r\n"]}