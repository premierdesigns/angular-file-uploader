{"version":3,"file":"angular-file-uploader.js.map","sources":["ng://angular-file-uploader/lib/angular-file-uploader.service.ts","ng://angular-file-uploader/lib/angular-file-uploader.component.ts","ng://angular-file-uploader/lib/angular-file-uploader.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AngularFileUploaderService {\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, OnChanges, SimpleChanges, Inject, ViewEncapsulation } from '@angular/core';\r\n@Component({\r\n  selector: 'angular-file-uploader',\r\n  template: `<div class=\"container\" *ngIf=\"(theme !== 'attachPin')\" id=\"default\">\r\n\r\n    <!-- Drag n Drop theme Starts -->\r\n    <div *ngIf=\"theme == 'dragNDrop'\" id=\"dragNDrop\" [ngClass]=\"(hideSelectBtn && hideResetBtn) ? null : 'dragNDropBtmPad'\" class=\"dragNDrop\">\r\n        <div style=\"position:relative;\">\r\n            <div id=\"div1\" class=\"div1 afu-dragndrop-box\" (drop)=\"drop($event)\" (dragover)=\"allowDrop($event)\">\r\n                <p class=\"afu-dragndrop-text\">{{replaceTexts?.dragNDropBox}}</p>\r\n            </div>\r\n            <!-- <span class='label label-info' id=\"upload-file-info{{id}}\">{{selectedFiles[0]?.name}}</span> -->\r\n        </div>\r\n    </div>\r\n    <!-- Drag n Drop theme Ends -->\r\n\r\n    <label for=\"sel{{id}}\" class=\"btn btn-primary btn-sm afu-select-btn\" *ngIf=\"!hideSelectBtn\">{{replaceTexts?.selectFileBtn}}</label>\r\n    <input type=\"file\" id=\"sel{{id}}\" style=\"display: none\" *ngIf=\"!hideSelectBtn\" (change)=\"onChange($event)\" title=\"Select file\"\r\n        name=\"files[]\" [accept]=formatsAllowed [attr.multiple]=\"multiple ? '' : null\" />\r\n    <button class=\"btn btn-info btn-sm resetBtn afu-reset-btn\" (click)=\"resetFileUpload()\" *ngIf=\"!hideResetBtn\">{{replaceTexts?.resetBtn}}</button>\r\n    <br *ngIf=\"!hideSelectBtn\">\r\n    <p class=\"constraints-info afu-constraints-info\">({{formatsAllowed}}) Size limit- {{(convertSize(maxSize *1024000))}}</p>\r\n    <!--Selected file list-->\r\n    <div class=\"row afu-valid-file\" *ngFor=\"let sf of selectedFiles;let i=index\" >\r\n        <p class=\"col-xs-3 textOverflow\"><span class=\"text-primary\">{{sf.name}}</span></p>\r\n        <p class=\"col-xs-3 padMarg sizeC\"><strong>({{convertSize(sf.size)}})</strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n        <!--  <input class=\"col-xs-3 progress caption\"  type=\"text\"  placeholder=\"Caption..\"  [(ngModel)]=\"Caption[i]\"  *ngIf=\"uploadClick\"/> -->\r\n        <div class=\"progress col-xs-3 padMarg afu-progress-bar\" *ngIf=\"singleFile && progressBarShow && !hideProgressBar\">\r\n            <span class=\"progress-bar progress-bar-success\" role=\"progressbar\" [ngStyle]=\"{'width':percentComplete+'%'}\">{{percentComplete}}%</span>\r\n        </div>\r\n        <a class=\"col-xs-1\" role=\"button\" (click)=\"removeFile(i,'sf')\" *ngIf=\"uploadClick\"><i class=\"fa fa-times\"></i></a>\r\n    </div>\r\n    <!--Invalid file list-->\r\n    <div class=\"row text-danger afu-invalid-file\" *ngFor=\"let na of notAllowedList;let j=index\">\r\n        <p class=\"col-xs-3 textOverflow\"><span>{{na['fileName']}}</span></p>\r\n        <p class=\"col-xs-3 padMarg sizeC\"><strong>({{na['fileSize']}})</strong></p>\r\n        <p class=\"col-xs-3 \">{{na['errorMsg']}}</p>\r\n        <a class=\"col-xs-1 delFileIcon\" role=\"button\" (click)=\"removeFile(j,'na')\" *ngIf=\"uploadClick\">&nbsp;<i class=\"fa fa-times\"></i></a>\r\n    </div>\r\n\r\n    <p *ngIf=\"uploadMsg\" class=\"{{uploadMsgClass}} + afu-upload-status\">{{uploadMsgText}}<p>\r\n    <div *ngIf=\"!singleFile && progressBarShow && !hideProgressBar\">\r\n        <div class=\"progress col-xs-4 padMarg afu-progress-bar\">\r\n            <span class=\"progress-bar progress-bar-success\" role=\"progressbar\" [ngStyle]=\"{'width':percentComplete+'%'}\">{{percentComplete}}%</span>\r\n        </div>\r\n        <br>\r\n        <br>\r\n    </div>\r\n    <button class=\"btn btn-success afu-upload-btn\" type=\"button\" (click)=\"uploadFiles()\" [disabled]=!uploadBtn>{{replaceTexts?.uploadBtn}}</button>\r\n    <br>\r\n</div>\r\n\r\n<!--/////////////////////////// ATTACH PIN THEME  //////////////////////////////////////////////////////////-->\r\n<div *ngIf=\"theme == 'attachPin'\" id=\"attachPin\">\r\n    <div style=\"position:relative;padding-left:6px\">\r\n        <a class='btn up_btn afu-attach-pin' (click)=\"attachpinOnclick()\">\r\n          {{replaceTexts?.attachPinBtn}}\r\n            <i class=\"fa fa-paperclip\" aria-hidden=\"true\"></i>\r\n            <!-- <p style=\"margin-top:10px\">({{formatsAllowed}}) Size limit- {{(convertSize(maxSize * 1024000))}}</p> -->\r\n            <input type=\"file\" id=\"sel{{id}}\" (change)=\"onChange($event)\" style=\"display: none\" title=\"Select file\" name=\"files[]\" [accept]=formatsAllowed\r\n                [attr.multiple]=\"multiple ? '' : null\" />\r\n            <br>\r\n        </a>\r\n        &nbsp;\r\n        <span class='label label-info' id=\"upload-file-info{{id}}\">{{selectedFiles[0]?.name}}</span>\r\n    </div>\r\n</div>\r\n\r\n<!--/////////////////////////// DRAG N DROP THEME  //////////////////////////////////////////////////////////-->\r\n<!-- <div *ngIf=\"theme == 'dragNDrop'\" id=\"dragNDrop\">\r\n  <div style=\"position:relative;padding-left:6px\">\r\n    <div id=\"div1\" (drop)=\"drop($event)\" (dragover)=\"allowDrop($event)\">\r\n      <p>Drag N Drop</p>\r\n    </div>\r\n    <span class='label label-info' id=\"upload-file-info{{id}}\">{{selectedFiles[0]?.name}}</span>\r\n  </div>\r\n</div> -->\r\n` ,\r\n  styles: [`.constraints-info{margin-top:10px;font-style:italic}.padMarg{padding:0;margin-bottom:0}.caption{margin-right:5px}.textOverflow{white-space:nowrap;padding-right:0;overflow:hidden;text-overflow:ellipsis}.up_btn{color:#000;background-color:transparent;border:2px solid #5c5b5b;border-radius:22px}.delFileIcon{text-decoration:none;color:#ce0909}.dragNDrop .div1{display:border-box;border:2px dashed #5c5b5b;height:6rem;width:20rem}.dragNDrop .div1>p{text-align:center;font-weight:700;color:#5c5b5b;margin-top:1.4em}.dragNDropBtmPad{padding-bottom:2rem}@media screen and (max-width:620px){.caption{padding:0}}@media screen and (max-width:510px){.sizeC{width:25%}}@media screen and (max-width:260px){.caption,.sizeC{font-size:10px}}.resetBtn{margin-left:3px}`]\r\n})\r\nexport class AngularFileUploaderComponent implements OnInit, OnChanges {\r\n  @Input()\r\n  config: any = {};\r\n  @Input()\r\n  resetUpload: boolean = this.config['resetUpload'];\r\n  @Output()\r\n  ApiResponse = new EventEmitter();\r\n\r\n  theme: string;\r\n  id: number;\r\n  hideProgressBar: boolean;\r\n  maxSize: number;\r\n  uploadAPI: string;\r\n  formatsAllowed: string;\r\n  multiple: boolean;\r\n  headers: any;\r\n  responseType: any;\r\n  hideResetBtn: boolean;\r\n  hideSelectBtn: boolean;\r\n\r\n  idDate: number = +new Date();\r\n  reg: RegExp = /(?:\\.([^.]+))?$/;\r\n  selectedFiles: Array<any> = [];\r\n  notAllowedList: Array<Object> = [];\r\n  Caption: Array<string> = [];\r\n  singleFile = true;\r\n  progressBarShow = false;\r\n  uploadBtn = false;\r\n  uploadMsg = false;\r\n  afterUpload = false;\r\n  uploadClick = true;\r\n  uploadMsgText: string;\r\n  uploadMsgClass: string;\r\n  percentComplete: number;\r\n  replaceTexts;\r\n\r\n  constructor() {\r\n    // console.log(\"id: \",this.id);\r\n    // console.log(\"idDate: \",this.idDate);\r\n    // console.log(Math.random());\r\n  }\r\n\r\n  ngOnChanges(rst: SimpleChanges) {\r\n    if (rst['config']) {\r\n      this.theme = this.config['theme'] || '';\r\n      this.id =\r\n        this.config['id'] ||\r\n        parseInt((this.idDate / 10000).toString().split('.')[1]) +\r\n          Math.floor(Math.random() * 20) * 10000;\r\n      this.hideProgressBar = this.config['hideProgressBar'] || false;\r\n      this.hideResetBtn = this.config['hideResetBtn'] || false;\r\n      this.hideSelectBtn = this.config['hideSelectBtn'] || false;\r\n      this.maxSize = this.config['maxSize'] || 20;\r\n      this.uploadAPI = this.config['uploadAPI']['url'];\r\n      this.formatsAllowed =\r\n        this.config['formatsAllowed'] || '.jpg,.png,.pdf,.docx,.txt,.gif,.jpeg';\r\n      this.multiple = this.config['multiple'] || false;\r\n      this.headers = this.config['uploadAPI']['headers'] || {};\r\n      this.responseType = this.config['uploadAPI']['responseType'] || {};\r\n      const defaultReplaceTextsValues: ReplaceTexts =  {\r\n        selectFileBtn: this.multiple ? 'Select Files' : 'Select File',\r\n        resetBtn: 'Reset',\r\n        uploadBtn: 'Upload',\r\n        dragNDropBox: 'Drag N Drop',\r\n        attachPinBtn: this.multiple ? 'Attach Files...' : 'Attach File...',\r\n        afterUploadMsg_success: 'Successfully Uploaded !',\r\n        afterUploadMsg_error: 'Upload Failed !'\r\n      };\r\n      this.replaceTexts = {...defaultReplaceTextsValues};\r\n      if (this.config['replaceTexts']) {\r\n        this.replaceTexts = {\r\n          ...defaultReplaceTextsValues,\r\n          ...this.config['replaceTexts']\r\n        };\r\n      }\r\n\r\n      // console.log(\"config: \", this.config);\r\n      // console.log(this.config[\"maxSize\"]);\r\n      // console.log(this.headers);\r\n      // console.log(\"rst: \", rst);\r\n    }\r\n\r\n    if (rst['resetUpload']) {\r\n      if (rst['resetUpload'].currentValue === true) {\r\n        this.resetFileUpload();\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log(\"Id: \", this.id);\r\n    this.resetUpload = false;\r\n  }\r\n\r\n  resetFileUpload() {\r\n    this.selectedFiles = [];\r\n    this.Caption = [];\r\n    this.notAllowedList = [];\r\n    this.uploadMsg = false;\r\n    this.uploadBtn = false;\r\n  }\r\n\r\n  onChange(event: any) {\r\n    // console.log(this.maxSize + this.formatsAllowed + this.multiple);\r\n    this.notAllowedList = [];\r\n    // console.log(\"onchange hit\");\r\n    if (this.afterUpload || !this.multiple) {\r\n      this.selectedFiles = [];\r\n      this.Caption = [];\r\n      this.afterUpload = false;\r\n    }\r\n    // FORMATS ALLOWED LIST\r\n    // console.log(\"FORMATS ALLOWED LIST= \"+this.formatsAllowed);\r\n    // NO OF FORMATS ALLOWED\r\n    let formatsCount: any;\r\n    formatsCount = this.formatsAllowed.match(new RegExp('\\\\.', 'g'));\r\n    formatsCount = formatsCount.length;\r\n    // console.log(\"NO OF FORMATS ALLOWED= \"+formatsCount);\r\n    // console.log(\"-------------------------------\");\r\n\r\n    // ITERATE SELECTED FILES\r\n    let file: FileList;\r\n    if (event.type === 'drop') {\r\n      file = event.dataTransfer.files;\r\n      // console.log(\"type: drop\");\r\n    } else {\r\n      file = event.target.files || event.srcElement.files;\r\n      // console.log(\"type: change\");\r\n    }\r\n    // console.log(file);\r\n    let currentFileExt: any;\r\n    let ext: any;\r\n    let frmtAllowed: boolean;\r\n    for (let i = 0; i < file.length; i++) {\r\n      // CHECK FORMAT\r\n      // CURRENT FILE EXTENSION\r\n      currentFileExt = this.reg.exec(file[i].name);\r\n      currentFileExt = currentFileExt[1];\r\n      // console.log(file[i].name);\r\n      frmtAllowed = false;\r\n      // FORMAT ALLOWED LIST ITERATE\r\n      for (let j = formatsCount; j > 0; j--) {\r\n        ext = this.formatsAllowed.split('.')[j];\r\n        // console.log(\"FORMAT LIST (\"+j+\")= \"+ext.split(\",\")[0]);\r\n        if (j === formatsCount) {\r\n          ext = this.formatsAllowed.split('.')[j] + ',';\r\n        } // check format\r\n        if (currentFileExt.toLowerCase() === ext.split(',')[0]) {\r\n          frmtAllowed = true;\r\n        }\r\n      }\r\n\r\n      if (frmtAllowed) {\r\n        // console.log(\"FORMAT ALLOWED\");\r\n        // CHECK SIZE\r\n        if (file[i].size > this.maxSize * 1024000) {\r\n          // console.log(\"SIZE NOT ALLOWED (\"+file[i].size+\")\");\r\n          this.notAllowedList.push({\r\n            fileName: file[i].name,\r\n            fileSize: this.convertSize(file[i].size),\r\n            errorMsg: 'Invalid size'\r\n          });\r\n          continue;\r\n        } else {\r\n          // format allowed and size allowed then add file to selectedFile array\r\n          this.selectedFiles.push(file[i]);\r\n        }\r\n      } else {\r\n        // console.log(\"FORMAT NOT ALLOWED\");\r\n        this.notAllowedList.push({\r\n          fileName: file[i].name,\r\n          fileSize: this.convertSize(file[i].size),\r\n          errorMsg: 'Invalid format'\r\n        });\r\n        continue;\r\n      }\r\n    }\r\n\r\n    if (this.selectedFiles.length !== 0) {\r\n      this.uploadBtn = true;\r\n      if (this.theme === 'attachPin') {\r\n        this.uploadFiles();\r\n      }\r\n    } else {\r\n      this.uploadBtn = false;\r\n    }\r\n    this.uploadMsg = false;\r\n    this.uploadClick = true;\r\n    this.percentComplete = 0;\r\n    event.target.value = null;\r\n  }\r\n\r\n  uploadFiles() {\r\n    // console.log(this.selectedFiles);\r\n    let i: any;\r\n    this.progressBarShow = true;\r\n    this.uploadClick = false;\r\n    this.notAllowedList = [];\r\n    let isError = false;\r\n\r\n    const xhr = new XMLHttpRequest();\r\n    const formData = new FormData();\r\n\r\n    for (i = 0; i < this.selectedFiles.length; i++) {\r\n      if (this.Caption[i] === undefined) {\r\n        this.Caption[i] = 'file' + i;\r\n      }\r\n      // Add DATA TO BE SENT\r\n      formData.append(\r\n        this.Caption[i],\r\n        this.selectedFiles[i] /*, this.selectedFiles[i].name*/\r\n      );\r\n      // console.log(this.selectedFiles[i]+\"{\"+this.Caption[i]+\" (Caption)}\");\r\n    }\r\n\r\n    if (i > 1) {\r\n      this.singleFile = false;\r\n    } else {\r\n      this.singleFile = true;\r\n    }\r\n\r\n    xhr.onreadystatechange = evnt => {\r\n      // console.log('onready');\r\n      if (xhr.readyState === 4) {\r\n        if (xhr.status !== 200 && xhr.status !== 201) {\r\n          isError = true;\r\n          this.progressBarShow = false;\r\n          this.uploadBtn = false;\r\n          this.uploadMsg = true;\r\n          this.afterUpload = true;\r\n          this.uploadMsgText = this.replaceTexts.afterUploadMsg_error;\r\n          this.uploadMsgClass = 'text-danger lead';\r\n          // console.log(this.uploadMsgText);\r\n          // console.log(evnt);\r\n        }\r\n        this.ApiResponse.emit(xhr);\r\n      }\r\n    };\r\n\r\n    xhr.upload.onprogress = evnt => {\r\n      this.uploadBtn = false; // button should be disabled by process uploading\r\n      if (evnt.lengthComputable) {\r\n        this.percentComplete = Math.round((evnt.loaded / evnt.total) * 100);\r\n      }\r\n      // console.log(\"Progress...\"/*+this.percentComplete+\" %\"*/);\r\n    };\r\n\r\n    xhr.onload = evnt => {\r\n      // console.log('onload');\r\n      // console.log(evnt);\r\n      this.progressBarShow = false;\r\n      this.uploadBtn = false;\r\n      this.uploadMsg = true;\r\n      this.afterUpload = true;\r\n      if (!isError) {\r\n        this.uploadMsgText = this.replaceTexts.afterUploadMsg_success;\r\n        this.uploadMsgClass = 'text-success lead';\r\n        // console.log(this.uploadMsgText + \" \" + this.selectedFiles.length + \" file\");\r\n      }\r\n    };\r\n\r\n    xhr.onerror = evnt => {\r\n      // console.log('onerror');\r\n      // console.log(evnt);\r\n    };\r\n\r\n    xhr.open('POST', this.uploadAPI, true);\r\n    for (const key of Object.keys(this.headers)) {\r\n      // Object.keys will give an Array of keys\r\n      xhr.setRequestHeader(key, this.headers[key]);\r\n    }\r\n    if (this.responseType) {\r\n      xhr.responseType = this.responseType;\r\n    }\r\n    // let token = sessionStorage.getItem(\"token\");\r\n    // xhr.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\r\n    // xhr.setRequestHeader('Authorization', `Bearer ${token}`);\r\n    xhr.send(formData);\r\n  }\r\n\r\n  removeFile(i: any, sf_na: any) {\r\n    // console.log(\"remove file clicked \" + i)\r\n    if (sf_na === 'sf') {\r\n      this.selectedFiles.splice(i, 1);\r\n      this.Caption.splice(i, 1);\r\n    } else {\r\n      this.notAllowedList.splice(i, 1);\r\n    }\r\n\r\n    if (this.selectedFiles.length === 0) {\r\n      this.uploadBtn = false;\r\n    }\r\n  }\r\n\r\n  convertSize(fileSize: number) {\r\n    // console.log(fileSize + \" - \"+ str);\r\n    return fileSize < 1024000\r\n      ? (fileSize / 1024).toFixed(2) + ' KB'\r\n      : (fileSize / 1024000).toFixed(2) + ' MB';\r\n  }\r\n\r\n  attachpinOnclick() {\r\n    // console.log(\"ID: \", this.id);\r\n    document.getElementById('sel' + this.id)!.click();\r\n    // $(\"#\"+\"sel\"+this.id).click();\r\n  }\r\n\r\n  drop(event: any) {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    // console.log(\"drop: \", event);\r\n    // console.log(\"drop: \", event.dataTransfer.files);\r\n    this.onChange(event);\r\n  }\r\n  allowDrop(event: any) {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    event.dataTransfer.dropEffect = 'copy';\r\n    // console.log(\"allowDrop: \",event)\r\n  }\r\n}\r\n\r\n/* interface CONFIG {\r\n  uploadAPI: string;\r\n  multiple?: boolean;\r\n  formatsAllowed?: string;\r\n  maxSize?: number;\r\n  id?: number;\r\n  resetUpload?: boolean;\r\n  theme?: string;\r\n  hideProgressBar?: boolean;\r\n }\r\n */\r\n\r\n interface ReplaceTexts {\r\n  selectFileBtn: string,\r\n  resetBtn: string,\r\n  uploadBtn: string,\r\n  dragNDropBox: string,\r\n  attachPinBtn: string,\r\n  afterUploadMsg_success: string,\r\n  afterUploadMsg_error: string,\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AngularFileUploaderComponent } from './angular-file-uploader.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [AngularFileUploaderComponent],\r\n  exports: [AngularFileUploaderComponent]\r\n})\r\nexport class AngularFileUploaderModule { }\r\n"],"names":[],"mappings":"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"}
